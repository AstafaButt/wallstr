[tool.poetry]
name = "dyvy_backend"
version = "0.1.0"
description = "DyvyAI backend"
authors = ["Guro Bokum <jiojiajiu@gmail.com>"]
license = "Apache-2.0"
readme = "README.md"
package-mode = false

[tool.taskipy.tasks]
dev = "uvicorn dyvy.server:app --reload --reload-include .env"
worker = "dramatiq dyvy.worker --watch . -p 1 -t 1"
lint = "ruff format --check . && ruff check --diff"
format = "ruff format"
mypy = "mypy ."
test = "coverage run -m pytest && coverage report -m"
alembic_print = "bash scripts/alembic.sh"
makemigrations = "alembic revision --autogenerate -m"
migrate = "alembic upgrade head"

[tool.poetry.dependencies]
python = "^3.12"
pydantic = "^2.10.5"
pydantic-settings = "^2.7.1"
dramatiq = {extras = ["rabbitmq", "watch"], version = "^1.17.1"}
redis = {extras = ["hiredis"], version = "^5.2.1"}
fastapi = "^0.115.6"
sqlalchemy = {extras = ["asyncio"], version = "^2.0.36"}
uvicorn = {extras = ["standard"], version = "^0.34.0"}
asyncpg = "^0.30.0"
sqlalchemy-utils = {extras = ["encrypted", "password"], version = "^0.41.2"}

[tool.poetry.group.dev.dependencies]
mypy = "^1.14.1"
ruff = "^0.8.6"
taskipy = "^1.14.1"
alembic = "^1.14.0"
alembic-postgresql-enum = "^1.5.0"
pytest = "^8.3.4"
pytest-watch = "^4.2.0"
pytest-dotenv = "^0.5.2"
pytest-asyncio = "^0.25.2"
coverage = "^7.6.10"

[tool.mypy]
# https://mypy.readthedocs.io/en/latest/config_file.html
strict_optional = true
show_error_codes = true
show_column_numbers = true
implicit_reexport = false
disallow_any_unimported = false
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_no_return = true
warn_return_any = true
warn_unused_configs = true
strict_equality = true
exclude = [
  "^examples/"
]

[[tool.mypy.overrides]]
module = [
  "sqlalchemy_utils.*",
]
ignore_missing_imports = true

[tool.ruff]
# https://docs.astral.sh/ruff/configuration
line-length = 88 # default
indent-width = 4

[tool.ruff.lint]
extend-select = ["B", "I", "SIM", "UP"]

[tool.ruff.format]
indent-style = "space"

[tool.pytest.ini_options]
env_files = ".env.test"
asyncio_mode = "auto"
env_override_existing_values = 1

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
